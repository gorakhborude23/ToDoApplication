{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gorakh\\\\ReactCodingPractice\\\\my-react-app\\\\src\\\\Task.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskComponent = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [tasks, setTasks] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [filter, setFilter] = useState(\"all\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    fetchTasks(userId);\n  }, [userId]);\n  const fetchTasks = async userId => {\n    setIsLoading(true);\n    axios.get(`http://localhost/api/Task/1`).then(response => {\n      setTasks(response.data.tasks);\n      setUserName(`${response.data.user.firstName} ${response.data.user.lastName}`);\n      setMessage(\"\");\n    }).catch(error => {\n      setMessage(\"Error fetching tasks. Please try again later.\");\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n  const updateTaskStatus = async (taskId, newStatus) => {\n    setIsLoading(true);\n    const taskData = {\n      \"userId\": 0,\n      \"taskId\": 0,\n      \"newStatus\": true\n    };\n    axios.put(`http://localhost/api/Task/1/${taskId}`, {\n      status: newStatus\n    }).then(response => {\n      setTasks(prevTasks => prevTasks.map(task => task.taskId === taskId ? {\n        ...task,\n        status: newStatus\n      } : task));\n      setMessage(\"Task status updated successfully.\");\n    }).catch(error => {\n      setMessage(\"Error fetching tasks. Please try again later.\");\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n  const filteredTasks = tasks.filter(task => {\n    console.log(task.status);\n    if (filter === \"all\") return true;\n    return filter === \"completed\" ? task.status : !task.status;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold mb-4\",\n      children: [\"Welcome, \", userName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"filter\",\n      className: \"block mb-2 font-medium\",\n      children: \"Filter Tasks:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"filter\",\n      value: filter,\n      onChange: e => setFilter(e.target.value),\n      className: \"border p-2 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"all\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"completed\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pending\",\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"w-full border-collapse border border-gray-300\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border p-2\",\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border p-2\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border p-2\",\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2\",\n            children: task.taskName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2\",\n            children: task.status ? \"Completed\" : \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.status,\n              onChange: () => updateTaskStatus(task.taskId, !task.status),\n              disabled: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this)]\n        }, task.taskId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-green-500\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskComponent, \"w2nhbAtAiHTd+uCKgXfsATta69I=\", false, function () {\n  return [useParams];\n});\n_c = TaskComponent;\nexport default TaskComponent;\nvar _c;\n$RefreshReg$(_c, \"TaskComponent\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","jsxDEV","_jsxDEV","TaskComponent","_s","userId","tasks","setTasks","userName","setUserName","filter","setFilter","isLoading","setIsLoading","message","setMessage","fetchTasks","get","then","response","data","user","firstName","lastName","catch","error","finally","updateTaskStatus","taskId","newStatus","taskData","put","status","prevTasks","map","task","filteredTasks","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","taskName","type","checked","disabled","_c","$RefreshReg$"],"sources":["C:/Gorakh/ReactCodingPractice/my-react-app/src/Task.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst TaskComponent = () => {\r\n    const { userId } = useParams();\r\n    const [tasks, setTasks] = useState([]);\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [filter, setFilter] = useState(\"all\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetchTasks(userId);\r\n    }, [userId]);\r\n\r\n    const fetchTasks = async (userId) => {\r\n        setIsLoading(true);\r\n\r\n        axios.get(`http://localhost/api/Task/1`)\r\n            .then((response) => {\r\n                setTasks(response.data.tasks);\r\n                setUserName(`${response.data.user.firstName} ${response.data.user.lastName}`);\r\n                setMessage(\"\");\r\n            }).catch((error) => {\r\n                setMessage(\"Error fetching tasks. Please try again later.\");\r\n            }).finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    const updateTaskStatus = async (taskId, newStatus) => {\r\n        setIsLoading(true);\r\n        const taskData = { \"userId\": 0, \"taskId\": 0, \"newStatus\": true }\r\n        axios.put(`http://localhost/api/Task/1/${taskId}`, { status: newStatus }).then((response) => {\r\n            setTasks((prevTasks) =>\r\n                prevTasks.map((task) =>\r\n                    task.taskId === taskId ? { ...task, status: newStatus } : task\r\n                ))\r\n            setMessage(\"Task status updated successfully.\");\r\n        }).catch((error) => {\r\n            setMessage(\"Error fetching tasks. Please try again later.\");\r\n        }).finally(() => {\r\n            setIsLoading(false);\r\n        });\r\n    };\r\n\r\n    const filteredTasks = tasks.filter((task) => {\r\n        console.log(task.status);\r\n        if (filter === \"all\") return true;\r\n        return filter === \"completed\" ? task.status : !task.status;\r\n    });\r\n\r\n    return (\r\n        <div className=\"p-4\">\r\n            <h1 className=\"text-xl font-bold mb-4\">Welcome, {userName}</h1>\r\n            <label htmlFor=\"filter\" className=\"block mb-2 font-medium\">Filter Tasks:</label>\r\n            <select\r\n                id=\"filter\"\r\n                value={filter}\r\n                onChange={(e) => setFilter(e.target.value)}\r\n                className=\"border p-2 mb-4\"\r\n            >\r\n                <option value=\"all\">All</option>\r\n                <option value=\"completed\">Completed</option>\r\n                <option value=\"pending\">Pending</option>\r\n            </select>\r\n\r\n            {isLoading ? (\r\n                <p>Loading...</p>\r\n            ) : (\r\n                <table className=\"w-full border-collapse border border-gray-300\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"border p-2\">Task Name</th>\r\n                            <th className=\"border p-2\">Status</th>\r\n                            <th className=\"border p-2\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {filteredTasks.map((task) => (\r\n                            <tr key={task.taskId}>\r\n                                <td className=\"border p-2\">{task.taskName}</td>\r\n                                <td className=\"border p-2\">{task.status ? \"Completed\" : \"Pending\"}</td>\r\n                                <td className=\"border p-2\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={task.status}\r\n                                        onChange={() => updateTaskStatus(task.taskId, !task.status)}\r\n                                        disabled={isLoading}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n\r\n            {message && <p className=\"mt-4 text-green-500\">{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}